const Blockchain = require("./block");

const block = new Blockchain();
block.createGenesis();
for (let i = 0; i < 5000; i++) {
  block.createNewTransaction(100, "simon", "100원보냄");
  block.createNewTransaction(100, "simon", "100원보냄");
  block.createNewTransaction(100, "simon", "100원보냄");
  block.createNewTransaction(100, "simon", "100원보냄");
  block.createNewTransaction(100, "simon", "100원보냄");
  block.createNewTransaction(100, "simon", "100원보냄");
  block.createNewTransaction(100, "simon", "100원보냄");
  block.createNewTransaction(100, "simon", "100원보냄");
  block.createNewTransaction(100, "simon", "100원보냄");
  block.createNewBlock();
}
block.chain[1].blockData[0] = "a00287e2e2a30c442bd1";
block.chain[3].blockData[0] = "a00287e2e2a30c442bd1";
block.chain[30].blockData[0] = "a00287e2e2a30c442bd1";
block.chain[123].blockData[0] = "a00287e2e2a30c442bd1";
block.chain[300].blockData[0] = "a00287e2e2a30c442bd1";
block.chain[430].blockData[0] = "a00287e2e2a30c442bd1";
block.chain[4340].blockData[0] = "a00287e2e2a30c442bd1";
// block.chain[301].blockData[0] = "a00287e2e2a30c442bd5";
// block.chain[801].blockData[1] = "a00323";
// var t0 = performance.now();
// block.isVaildBlock();
// var t1 = performance.now();
// console.log("for 사용 검증:" + (t1 - t0) + "ms");
// var t2 = performance.now();
// block.isVaildBlock2();
// var t3 = performance.now();
// console.log("다음블럭 prevHash 비교 검증: " + (t3 - t2) + "ms");
var t0 = performance.now();
block.merkleVaild();
var t1 = performance.now();
console.log("merkletreejs 라이브러리 사용 검증:" + (t1 - t0) + "ms");
// var t4 = performance.now();
// block.merkleVaild2();
// var t5 = performance.now();
// console.log("merkleRoot 값 비교 검증:" + (t5 - t4) + "ms");
